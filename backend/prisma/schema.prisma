generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  name     String?
  email    String   @unique
  password String
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime?       @updatedAt @map("updated_at")
  
  recipes Recipes[]
  likes RecipeLikes[]

  @@map("users")
}

model RecipeLikes {
  id       String     @id @default(uuid())
  userId   String     @map("fk_user_id")
  recipeId Int     @map("fk_recipes_id")

  user     User    @relation(fields: [userId], references: [id])
  recipe   Recipes @relation(fields: [recipeId], references: [id])

  @@map("recipe_likes")
  @@unique([userId, recipeId]) 
}


enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum Tags {
  VEGAN
  VEGETARIAN
  GLUTEN_FREE
  DAIRY_FREE
  LOW_CARB
  SUGAR_FREE
  HIGH_PROTEIN
  RAW
  QUICK_MEAL
  LOW_CALORIE
  SPICY
  SWEET
  SAVORY
  DESSERT
  BREAKFAST
  SNACK
  BUDGET_FRIENDLY
  SMOOTHIE
  SOUP
  SALAD
  GRILLED
  BAKED
  FRIED
  FERMENTED
  HEALTHY
  GOURMET
}


model Recipes {
  id          Int     @id @default(autoincrement())
  userId      String     @map("user_id")
  title       String
  preparationTime Int @map("prep_time")
  difficulty  Difficulty @unique
  isDeleted  Boolean   @default(false) @map("is_deleted")
  deletedAt  DateTime? @map("deleted_at")
  instructions String
  ingredients String
  tags       Tags[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  user       User      @relation(fields: [userId], references: [id])
  likes      RecipeLikes[]

  @@map("recipes")
}